APK_PATH = $$shell_path($$OUT_PWD/android-build/$${TARGET}.apk)
!contains(TEMPLATE, subdirs): {
    apk_install_target.target = apk_install_target
    apk_install_target.depends = first
    apk_install_target.commands = $(MAKE) -f $(MAKEFILE) INSTALL_ROOT=$$OUT_PWD/android-build install

    apk.target = apk
    apk.depends = apk_install_target
    qtPrepareTool(ANDROIDDEPLOYQT, androiddeployqt)
    isEmpty(ANDROID_DEPLOYMENT_SETTINGS_FILE): ANDROID_DEPLOYMENT_SETTINGS_FILE = $$OUT_PWD/android-$$TARGET-deployment-settings.json
    contains(QMAKE_HOST.os, Windows): extension = .exe
    apk.commands = $$ANDROIDDEPLOYQT --input $$ANDROID_DEPLOYMENT_SETTINGS_FILE --output $$OUT_PWD/android-build --apk $$APK_PATH
} else {
    prepareRecursiveTarget(apk)
    prepareRecursiveTarget(apk_install_target)
}
QMAKE_EXTRA_TARGETS *= apk apk_install_target

contains(TEMPLATE, ".*app") {
    !android_app {
        !contains(TARGET, ".so"): TARGET = lib$${TARGET}.so
        QMAKE_LFLAGS += -Wl,-soname,$$shell_quote($$TARGET)

        android_install {
            target.path=/libs/$$ANDROID_TARGET_ARCH/
            INSTALLS *= target
        }
    }
} else: contains(TEMPLATE, "lib"):!static:!QTDIR_build:android_install {
    target.path = /libs/$$ANDROID_TARGET_ARCH/
    INSTALLS *= target
}
