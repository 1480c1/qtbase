#
# qmake configuration for solaris-g++-64
#
# The X11 header files used to be broken on Solaris until patches were
# released in early 2001 for Solaris 2.6, 7, and 8. On Solaris 2.5.1
# or non-patched systems -fpermissive works around the incompatibility
# between GCC 2.95 or better and Solaris - but we still get warnings
# because we don't use -isystem.
#
# From the standards(5) manual page:
#   The XNS4 specification is safe for use only in ILP32 (32-bit)
#   environments and should not be used for LP64 (64-bit)
#   application environments. Use XNS5, which has LP64-clean
#   interfaces that are portable across ILP32 and LP64 environments.
#   [...]
#   For platforms supporting the LP64 (64-bit) programming environment
#   where the SC5.0 Compilers have been installed, SUSv2-conforming LP64
#   applications using XNS5 library calls should be built with command
#   lines of the form:
#     c89 $(getconf XBS5_LP64_OFF64_CFLAGS) -D_XOPEN_SOURCE=500 \
#         $(getconf XBS5_LP64_OFF64_LDFLAGS) foo.c -o foo \
#         $(getconf XBS5_LP64_OFF64_LIBS) -lxnet
# So it appears that _XOPEN_SOURCE=500 should be defined when building
# 64-bit applications (on Solaris 7 and better). But then __EXTENSIONS__
# should be defined as well to recover all the default system interface.
#

MAKEFILE_GENERATOR      = UNIX
CONFIG                 += incremental
QMAKE_INCREMENTAL_STYLE = sublib

include(../common/solaris.conf)

QMAKE_CFLAGS            = -m64 -D_XOPEN_SOURCE=500 -D__EXTENSIONS__
QMAKE_LFLAGS            = -m64

QMAKE_LIBDIR            = /usr/sfw/lib/64
QMAKE_LIBDIR_X11        = /usr/openwin/lib/64
QMAKE_LIBDIR_OPENGL     = /usr/openwin/lib/64

include(../common/gcc-base.conf)

QMAKE_LFLAGS_SHLIB      = -shared
QMAKE_LFLAGS_PLUGIN     = $$QMAKE_LFLAGS_SHLIB
QMAKE_LFLAGS_SONAME     = -h$$LITERAL_WHITESPACE
QMAKE_LFLAGS_THREAD     =
QMAKE_LFLAGS_NOUNDEF    = -z defs
QMAKE_LFLAGS_RPATH      = -Wl,-R,

include(../common/g++-base.conf)

QMAKE_LFLAGS_RELEASE    =
QMAKE_LFLAGS_DEBUG      = -g

load(qt_config)
