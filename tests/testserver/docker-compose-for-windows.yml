version: '3.4'

# The tag of images is used by docker compose file to launch the corresponding
# docker containers. The value of tag comes from the provisioning script
# (coin/provisioning/.../testserver/docker_testserver.sh). The script gets SHA-1
# of each server context as the tag of docker images. If one of the server
# contexts gets changes, please make sure to update this compose file as well.
# You can run command 'docker images' to list all the tags of test server images.
# For example:
# REPOSITORY              TAG
# qt-test-server-apache2  537fe302f61851d1663f41495230d8e3554a4a13

services:
    apache2:
        container_name: qt-test-server-apache2
        domainname: ${TEST_DOMAIN}
        build:
            context: .
            dockerfile: ${SHARED_DATA}/Dockerfile
            args:
                provisioningImage: qt-test-server-apache2:537fe302f61851d1663f41495230d8e3554a4a13
                shareDir: ./common
                serviceDir: ./apache2
                test_domain: ${TEST_DOMAIN}
        entrypoint: service/startup.sh
        command: [service/ssl.sh, service/apache2.sh]
        network_mode: "host"
        extra_hosts:
            - "qt-test-server.${TEST_DOMAIN}:${MACHINE_IP}"
        environment:
            - test_cert="qt-test-server-host-network-cacert.pem"

    squid:
        container_name: qt-test-server-squid
        domainname: ${TEST_DOMAIN}
        depends_on:
            - apache2
        build:
            context: .
            dockerfile: ${SHARED_DATA}/Dockerfile
            args:
                provisioningImage: qt-test-server-squid:9c32f41b19aca3d778733c4d8fb0ecc5955e893c
                shareDir: ./common
                serviceDir: ./squid
                test_domain: ${TEST_DOMAIN}
        entrypoint: service/startup.sh
        command: service/squid.sh
        network_mode: "host"
        extra_hosts:
            - "qt-test-server.${TEST_DOMAIN}:${MACHINE_IP}"

    vsftpd:
        container_name: qt-test-server-vsftpd
        domainname: ${TEST_DOMAIN}
        build:
            context: .
            dockerfile: ${SHARED_DATA}/Dockerfile
            args:
                provisioningImage: qt-test-server-vsftpd:f3a9c8d793a77cc007c0e4e481bec01f9e3eeb7e
                shareDir: ./common
                serviceDir: ./vsftpd
                test_domain: ${TEST_DOMAIN}
        entrypoint: service/startup.sh
        command: service/vsftpd.sh
        network_mode: "host"
        extra_hosts:
            - "qt-test-server.${TEST_DOMAIN}:${MACHINE_IP}"

    ftp-proxy:
        container_name: qt-test-server-ftp-proxy
        domainname: ${TEST_DOMAIN}
        depends_on:
            - vsftpd
        build:
            context: .
            dockerfile: ${SHARED_DATA}/Dockerfile
            args:
                provisioningImage: qt-test-server-ftp-proxy:d7de8b28392d173db512a558ccc84ead8bece2ae
                shareDir: ./common
                serviceDir: ./ftp-proxy
                test_domain: ${TEST_DOMAIN}
        entrypoint: service/startup.sh
        command: service/ftp-proxy.sh
        network_mode: "host"
        extra_hosts:
            - "qt-test-server.${TEST_DOMAIN}:${MACHINE_IP}"

    danted:
        container_name: qt-test-server-danted
        domainname: ${TEST_DOMAIN}
        depends_on:
            - apache2
            - vsftpd
            - ftp-proxy
        build:
            context: .
            dockerfile: ${SHARED_DATA}/Dockerfile
            args:
                provisioningImage: qt-test-server-danted:35607f9b790524cf9690c7d12a9a401696b7b6b5
                shareDir: ./common
                serviceDir: ./danted
                test_domain: ${TEST_DOMAIN}
        entrypoint: service/startup.sh
        command: service/danted.sh
        network_mode: "host"
        extra_hosts:
            - "qt-test-server.${TEST_DOMAIN}:${MACHINE_IP}"
        environment:
            - danted_internal=${MACHINE_IP}
            - danted_external=${MACHINE_IP}
            - danted_auth_internal=${MACHINE_IP}
            - danted_auth_external=${MACHINE_IP}

